[{"C:\\Study\\react-course-project\\personal\\src\\index.js":"1","C:\\Study\\react-course-project\\personal\\src\\App.js":"2","C:\\Study\\react-course-project\\personal\\src\\reportWebVitals.js":"3","C:\\Study\\react-course-project\\personal\\src\\components\\CustomerList.js":"4","C:\\Study\\react-course-project\\personal\\src\\components\\AddCustomer.js":"5","C:\\Study\\react-course-project\\personal\\src\\components\\EditCustomer.js":"6","C:\\Study\\react-course-project\\personal\\src\\components\\Training.js":"7","C:\\Study\\react-course-project\\personal\\src\\components\\AddTraining.js":"8","C:\\Study\\react-course-project\\personal\\src\\components\\TrainingCalendar.js":"9","C:\\Study\\react-course-project\\personal\\src\\sidebar\\NavBar.js":"10","C:\\Study\\react-course-project\\personal\\src\\sidebar\\SideBarData.js":"11"},{"size":500,"mtime":1607117362116,"results":"12","hashOfConfig":"13"},{"size":899,"mtime":1608244215559,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607117362116,"results":"15","hashOfConfig":"13"},{"size":5496,"mtime":1608244736240,"results":"16","hashOfConfig":"13"},{"size":3848,"mtime":1608200285189,"results":"17","hashOfConfig":"13"},{"size":4364,"mtime":1608239343857,"results":"18","hashOfConfig":"13"},{"size":4386,"mtime":1608244743036,"results":"19","hashOfConfig":"13"},{"size":4825,"mtime":1608202486644,"results":"20","hashOfConfig":"13"},{"size":1367,"mtime":1608238213101,"results":"21","hashOfConfig":"13"},{"size":1474,"mtime":1608200014440,"results":"22","hashOfConfig":"13"},{"size":681,"mtime":1608161033369,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1h006md",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Study\\react-course-project\\personal\\src\\index.js",[],["49","50"],"C:\\Study\\react-course-project\\personal\\src\\App.js",["51","52","53","54","55"],"C:\\Study\\react-course-project\\personal\\src\\reportWebVitals.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\CustomerList.js",["56","57"],"C:\\Study\\react-course-project\\personal\\src\\components\\AddCustomer.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\EditCustomer.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\Training.js",["58","59","60","61","62"],"C:\\Study\\react-course-project\\personal\\src\\components\\AddTraining.js",["63"],"import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\nconst AddTraining = (props) => {\r\n    const [training, setTraining] = useState({\r\n        activity: '',\r\n        duration: '',\r\n        date: '',\r\n    });\r\n\r\n    const [msg,setMsg] = useState(\"\");\r\n  \r\n\r\n    const addTraining = () => {\r\n        const {href} = props?.params?.data?.links?.find(({rel}) => rel ==='self')\r\n        const data = {...training,\r\n            customer: href\r\n        }\r\n        console.log(data);\r\n        fetch('https://customerrest.herokuapp.com/api/trainings',{\r\n            method: 'POST',\r\n            headers: {'Content-type' : 'application/json'},\r\n            body: JSON.stringify(data)\r\n\r\n        })\r\n        .then(_ => props.main)\r\n        .then(_ => {\r\n            setMsg('Updated customer successfully');\r\n            setOpen(true);\r\n        })\r\n\r\n      \r\n\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const [open,setOpen] = useState(false);\r\n\r\n\r\n    const handleClose= () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const inputChanged = (e) => {\r\n        setTraining({...training,[e.target.name]:e.target.value})\r\n    }\r\n\r\n   const handleSave = () => {\r\n       \r\n      addTraining()\r\n       setOpen(false)\r\n   }\r\n  \r\n   \r\n\r\n  \r\n   const [selectedDate,setSelectedDate] = useState(new Date());\r\n\r\n   const handleChanged = (date) => {\r\n     setSelectedDate(date)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n       setTraining({\r\n            date: selectedDate,\r\n\r\n       })\r\n    }\r\n   /*  console.log(selectedDate) */\r\n\r\n  \r\n  \r\n\r\n    return (\r\n        <div>\r\n        <Button color=\"primary\" size=\"small\" onClick={handleOpen} variant=\"outlined\" >Add training</Button>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n            Add training ({props.params.data.firstname} {props.params.data.lastname})\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                    <TextField\r\n                        autoFocus={true}\r\n                        name='activity'\r\n                        value={training.activity}\r\n                        margin='dense'\r\n                        label=\"Activity\"\r\n                        onChange={inputChanged}\r\n                        fullWidth\r\n                        />\r\n                    <TextField\r\n                   \r\n                        name='duration'\r\n                        value={training.duration}\r\n                        margin='dense'\r\n                        label=\"Duration(min)\"\r\n                        onChange={inputChanged}\r\n                        fullWidth\r\n                        />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                         <Grid container justify=\"space-around\">\r\n        \r\n                            <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"Date picker dialog\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            value={selectedDate}\r\n                            onChange={handleChanged}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            />\r\n                            <KeyboardTimePicker\r\n                            margin=\"normal\"\r\n                            id=\"time-picker\"\r\n                            label=\"Time picker\"\r\n                            value={selectedDate}\r\n                            onChange={handleChanged}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change time',\r\n                            }}\r\n                            />\r\n\r\n                         </Grid>\r\n\r\n                   </MuiPickersUtilsProvider>\r\n                \r\n             </DialogContent>\r\n\r\n            <DialogActions>\r\n\r\n                <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                <Button onClick={handleSave} color=\"primary\">Save</Button>\r\n\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n        \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTraining;","C:\\Study\\react-course-project\\personal\\src\\components\\TrainingCalendar.js",["64"],"import React, {useState,useEffect} from 'react';\r\nimport { Calendar, momentLocalizer, Views} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nconst TrainingCalendar = () => {\r\n    const localizer = momentLocalizer(moment)\r\n    const [trainings,setTrainings] = useState([])\r\n\r\n    useEffect(() => {getTraining()});\r\n\r\n    const getTraining = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n        .then(res => res.json())\r\n        .then(data => setTrainings(data))\r\n        .catch(err => console.log(err))\r\n /*        console.log(trainings) */\r\n    }\r\n\r\n    const allViews = Object.keys(Views).map(k=> Views[k]);\r\n\r\n    const events = trainings.map((training)=> {\r\n        return {\r\n            id: training.id,\r\n            title: training.activity,\r\n            firstname: training.customer.firstname,\r\n            start: training.date,\r\n            end:moment().add(training.duration, 'minutes'),\r\n            \r\n        }\r\n    }\r\n    )\r\n\r\n        return (\r\n        <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor='start'\r\n            endAccessor='end'\r\n            step='60'\r\n            views={['month','agenda']}\r\n            style={{height:450}}\r\n        />\r\n\r\n        )\r\n}\r\n\r\nexport default TrainingCalendar;","C:\\Study\\react-course-project\\personal\\src\\sidebar\\NavBar.js",[],"C:\\Study\\react-course-project\\personal\\src\\sidebar\\SideBarData.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":10,"column":33,"nodeType":"71","messageId":"72","endLine":10,"endColumn":39},{"ruleId":"69","severity":1,"message":"73","line":10,"column":40,"nodeType":"71","messageId":"72","endLine":10,"endColumn":45},{"ruleId":"69","severity":1,"message":"74","line":10,"column":46,"nodeType":"71","messageId":"72","endLine":10,"endColumn":50},{"ruleId":"69","severity":1,"message":"75","line":13,"column":9,"nodeType":"71","messageId":"72","endLine":13,"endColumn":22},{"ruleId":"69","severity":1,"message":"76","line":17,"column":9,"nodeType":"71","messageId":"72","endLine":17,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":33,"column":29,"nodeType":"80","endLine":33,"endColumn":31,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"77","line":8,"column":10,"nodeType":"71","messageId":"72","endLine":8,"endColumn":22},{"ruleId":"69","severity":1,"message":"82","line":12,"column":8,"nodeType":"71","messageId":"72","endLine":12,"endColumn":14},{"ruleId":"69","severity":1,"message":"83","line":17,"column":12,"nodeType":"71","messageId":"72","endLine":17,"endColumn":20},{"ruleId":"69","severity":1,"message":"84","line":17,"column":21,"nodeType":"71","messageId":"72","endLine":17,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":22,"column":29,"nodeType":"80","endLine":22,"endColumn":31,"suggestions":"85"},{"ruleId":"69","severity":1,"message":"86","line":26,"column":12,"nodeType":"71","messageId":"72","endLine":26,"endColumn":15},{"ruleId":"69","severity":1,"message":"87","line":20,"column":11,"nodeType":"71","messageId":"72","endLine":20,"endColumn":19},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is assigned a value but never used.","'Link' is assigned a value but never used.","'AgGridColumn' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'main'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'moment' is defined but never used.","'customer' is assigned a value but never used.","'setCustomer' is assigned a value but never used.",["91"],"'msg' is assigned a value but never used.","'allViews' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"92","fix":"94"},"Update the dependencies array to be: [main]",{"range":"95","text":"96"},{"range":"97","text":"96"},[899,901],"[main]",[655,657]]