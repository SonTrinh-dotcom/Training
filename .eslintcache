[{"C:\\Study\\react-course-project\\personal\\src\\index.js":"1","C:\\Study\\react-course-project\\personal\\src\\App.js":"2","C:\\Study\\react-course-project\\personal\\src\\reportWebVitals.js":"3","C:\\Study\\react-course-project\\personal\\src\\components\\CustomerList.js":"4","C:\\Study\\react-course-project\\personal\\src\\components\\AddCustomer.js":"5","C:\\Study\\react-course-project\\personal\\src\\components\\EditCustomer.js":"6","C:\\Study\\react-course-project\\personal\\src\\components\\Training.js":"7","C:\\Study\\react-course-project\\personal\\src\\Header.js":"8","C:\\Study\\react-course-project\\personal\\src\\components\\AddTraining.js":"9","C:\\Study\\react-course-project\\personal\\src\\components\\TrainingCalendar.js":"10"},{"size":500,"mtime":1607117362116,"results":"11","hashOfConfig":"12"},{"size":1182,"mtime":1608115069063,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607117362116,"results":"14","hashOfConfig":"12"},{"size":5924,"mtime":1608133404311,"results":"15","hashOfConfig":"12"},{"size":3926,"mtime":1608065394072,"results":"16","hashOfConfig":"12"},{"size":4492,"mtime":1608066038472,"results":"17","hashOfConfig":"12"},{"size":4386,"mtime":1608064979659,"results":"18","hashOfConfig":"12"},{"size":2319,"mtime":1607878902015,"results":"19","hashOfConfig":"12"},{"size":4585,"mtime":1608134208629,"results":"20","hashOfConfig":"12"},{"size":1252,"mtime":1608123005636,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1h006md",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Study\\react-course-project\\personal\\src\\index.js",[],["46","47"],"C:\\Study\\react-course-project\\personal\\src\\App.js",["48","49","50","51","52"],"import React from 'react';\nimport './App.css';\nimport CustomerList from './components/CustomerList';\nimport Training from './components/Training';\nimport TrainingCalendar from './components/TrainingCalendar'\nimport Header from \"./Header\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\n\nfunction App() {\n  const BrowserRouter = require(\"react-router-dom\").BrowserRouter;\n\n  const Route = require(\"react-router-dom\").Route;\n  \n  const Link = require(\"react-router-dom\").Link;\n\n  const Switch = require(\"react-router-dom\").Switch;\n\nconst useStyles = makeStyles ({})\nconst classes = useStyles();\n  return (\n    <div className=\"App\">\n    <Header />\n    <BrowserRouter>\n      <div>\n      <Link to=\"/\">Customer</Link>\n      <Link to=\"/training\">Training</Link>\n      <Link to=\"/calendar\">TrainingCalendar</Link>\n      <Switch>\n        <Route exact path = \"/\" component = {CustomerList} />\n        <Route  path = \"/training\" component = {Training} />\n      <Route path=\"/calendar\" component = {TrainingCalendar} />\n      </Switch>\n      </div>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Study\\react-course-project\\personal\\src\\reportWebVitals.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\CustomerList.js",["53"],"C:\\Study\\react-course-project\\personal\\src\\components\\AddCustomer.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\EditCustomer.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\Training.js",["54","55","56","57"],"import React, {useRef,useState,useEffect} from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { AgGridReact } from 'ag-grid-react/lib/agGridReact';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport moment from 'moment'\r\n\r\nconst Training = () => {\r\n\r\n    const [training, setTraining] = useState([]);\r\n    const [customer,setCustomer] = useState([]);\r\n    const gridRef = useRef();\r\n    const [open,setOpen] = useState(false);\r\n    const  [msg,setMsg] = useState(\"\");\r\n\r\n    useEffect(() => main(), []);\r\n\r\n    const BASE_URL = 'https://customerrest.herokuapp.com/api';\r\n\r\n    const fetchPromise = async(url) => {\r\n        const res = await fetch(url);\r\n        return await res.json();\r\n    }\r\n\r\n    const main = async () => {\r\n        try {\r\n            const {content} = await fetchPromise (`${BASE_URL}/trainings`);\r\n            const trainings = content \r\n            const promises = trainings.map(async({links}, index) => {\r\n                const {href} = links.find(({rel}) => rel ==='customer');\r\n                const customerUrl = href\r\n                const customer = await fetchPromise(customerUrl);\r\n                trainings[index].customer = customer;\r\n                \r\n            });\r\n\r\n            await Promise.all(promises);\r\n            setTraining(trainings)\r\n           console.log(trainings)\r\n\r\n        }\r\n        catch(e) {\r\n            console.error(\"wtf\",e)\r\n        }\r\n    }\r\n\r\n    /* const getTraining = () => {\r\n        fetch ('https://customerrest.herokuapp.com/api/trainings')\r\n        .then(res => res.json())\r\n        \r\n        .then((data) => {\r\n            setTraining(data.content);\r\n            console.log(data.content.links[2].href)\r\n            })\r\n            \r\n        .catch(err => console.log(err))\r\n    }\r\n */\r\n    const deleteAction = (link) => {\r\n        if(window.confirm('Are you sure?'))\r\n        {\r\n            fetch(link, {\r\n            method: 'DELETE'\r\n            })\r\n            .then(_ => main())\r\n            .then(_ =>{ \r\n                setMsg('Deleted successfully')\r\n                setOpen(true)\r\n            })\r\n            .catch(err => console.err(\"WTF\"))\r\n\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n/*     const getCustomer = (link) => {\r\n        return fetch(link)\r\n        .then(res => res.json())\r\n\r\n        .then((dataCustomer) => \r\n            setCustomer(dataCustomer.firstname)\r\n        )\r\n        .catch(err => console.log(err))\r\n    }\r\n */\r\n   \r\n    \r\n    const columns = [\r\n        {\r\n            headerName: 'Action',\r\n            width: 50,\r\n             field:'',\r\n             cellRendererFramework: params => <DeleteIcon\r\n                                                size = 'small'\r\n                                                onClick = {() => deleteAction (params.data.links[0].href) }\r\n                                                ></DeleteIcon>,\r\n             sortable: true, \r\n             filter: true },\r\n            \r\n        {headerName: 'Activity',width:100, field:'activity', sortable: true, filter: true },\r\n        {headerName: 'Date',width:100, field:'date', sortable: true, filter: true },\r\n        {headerName: 'Duration(min)',width:50, field:'duration', sortable: true, filter: true },\r\n        {\r\n            headerName: 'Customer',\r\n            width: 10,\r\n             field:'',\r\n             cellRendererFramework: params => <div>{params.data.customer.firstname}</div>,\r\n             sortable: true, \r\n             filter: true ,\r\n          \r\n        }\r\n      \r\n\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n           <div className = \"ag-theme-material\" style={ { height: '650px', width: '90%', margin: 'auto' } }>\r\n           <AgGridReact\r\n           rowData = {training}\r\n           columnDefs = {columns}\r\n           onGridReady = {params => {\r\n                   gridRef.current = params.api\r\n                   params.api.sizeColumnsToFit();\r\n           }}\r\n           >\r\n           </AgGridReact>\r\n           \r\n           </div>\r\n           <Snackbar\r\n           open={open}\r\n           autoHideDuration={5000}\r\n           onClose={handleClose}\r\n           message={msg}\r\n           >\r\n           </Snackbar>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Training;","C:\\Study\\react-course-project\\personal\\src\\Header.js",["58","59"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    \r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n           Customer\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n               edge=\"start\" \r\n               className={classes.menuButton}\r\n                color=\"inherit\" \r\n                aria-label=\"menu\"\r\n                onClick={handleMenu}\r\n                >\r\n\r\n              <MenuIcon />\r\n            </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Customer</MenuItem>\r\n                <MenuItem onClick={handleClose}>Training</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header ;","C:\\Study\\react-course-project\\personal\\src\\components\\AddTraining.js",[],"C:\\Study\\react-course-project\\personal\\src\\components\\TrainingCalendar.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":9,"column":26,"nodeType":"66","messageId":"67","endLine":9,"endColumn":32},{"ruleId":"64","severity":1,"message":"68","line":9,"column":33,"nodeType":"66","messageId":"67","endLine":9,"endColumn":39},{"ruleId":"64","severity":1,"message":"69","line":9,"column":40,"nodeType":"66","messageId":"67","endLine":9,"endColumn":45},{"ruleId":"64","severity":1,"message":"70","line":9,"column":46,"nodeType":"66","messageId":"67","endLine":9,"endColumn":50},{"ruleId":"64","severity":1,"message":"71","line":21,"column":7,"nodeType":"66","messageId":"67","endLine":21,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":33,"column":29,"nodeType":"74","endLine":33,"endColumn":31,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"76","line":12,"column":8,"nodeType":"66","messageId":"67","endLine":12,"endColumn":14},{"ruleId":"64","severity":1,"message":"77","line":17,"column":12,"nodeType":"66","messageId":"67","endLine":17,"endColumn":20},{"ruleId":"64","severity":1,"message":"78","line":17,"column":21,"nodeType":"66","messageId":"67","endLine":17,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":22,"column":29,"nodeType":"74","endLine":22,"endColumn":31,"suggestions":"79"},{"ruleId":"64","severity":1,"message":"80","line":10,"column":9,"nodeType":"66","messageId":"67","endLine":10,"endColumn":19},{"ruleId":"64","severity":1,"message":"81","line":27,"column":16,"nodeType":"66","messageId":"67","endLine":27,"endColumn":23},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'main'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'moment' is defined but never used.","'customer' is assigned a value but never used.","'setCustomer' is assigned a value but never used.",["85"],"'withRouter' is defined but never used.","'setAuth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"86","fix":"88"},"Update the dependencies array to be: [main]",{"range":"89","text":"90"},{"range":"91","text":"90"},[901,903],"[main]",[657,659]]